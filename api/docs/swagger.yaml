definitions:
  domain.Project:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      sprint_count:
        type: integer
      sprint_duration:
        type: integer
      start_date:
        type: string
      title:
        type: string
      total_sp:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.Sprint:
    properties:
      actual_sp:
        type: integer
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: integer
      ideal_sp:
        type: integer
      project_id:
        type: integer
      start_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      id:
        type: integer
      password:
        description: always must be hashed
        type: string
      updated_at:
        type: string
    type: object
  io.APIKeyStatusResponse:
    properties:
      exists:
        description: APIキーが存在するかどうか
        type: boolean
    type: object
  io.CreateAPIKeyResponse:
    properties:
      raw_key:
        type: string
    type: object
  io.CreateProjectRequest:
    properties:
      description:
        maxLength: 500
        type: string
      sprint_count:
        maximum: 100
        minimum: 1
        type: integer
      sprint_duration:
        enum:
        - 1
        - 2
        - 3
        type: integer
      start_date:
        type: string
      title:
        maxLength: 100
        type: string
      total_sp:
        maximum: 1000
        type: integer
    required:
    - sprint_count
    - sprint_duration
    - start_date
    - title
    - total_sp
    type: object
  io.ErrorDetail:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  io.ErrorResponse:
    properties:
      details:
        items:
          $ref: '#/definitions/io.ErrorDetail'
        type: array
      message:
        type: string
    type: object
  io.SignInRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - password
    type: object
  io.SignInResponse:
    properties:
      token:
        type: string
    type: object
  io.SignUpRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - password
    type: object
  io.UpdateProjectRequest:
    properties:
      description:
        maxLength: 500
        type: string
      sprint_count:
        maximum: 100
        minimum: 1
        type: integer
      title:
        maxLength: 100
        type: string
      total_sp:
        maximum: 1000
        type: integer
    required:
    - sprint_count
    - title
    - total_sp
    type: object
  io.UpdateSprintRequest:
    properties:
      actual_sp:
        maximum: 1000
        type: integer
    type: object
info:
  contact: {}
  description: 'Burny Backend API Doc. \nNOTE: JWT Auhtentication is also supported
    but not displayed due to swagger generaton tool limitation.'
  license:
    name: AGPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  title: Burny API
  version: "1.0"
paths:
  /apikeys:
    delete:
      description: Delete apikey
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Delete apikey
      tags:
      - apikeys
    post:
      description: Create apikey
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.CreateAPIKeyResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Create apikey
      tags:
      - apikeys
  /apikeys/status:
    get:
      description: Check if the user has an apikey
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.APIKeyStatusResponse'
      security:
      - Account API Key: []
      summary: Check apikey Status
      tags:
      - apikeys
  /projects:
    get:
      consumes:
      - application/json
      description: List projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Project'
            type: array
      security:
      - Account API Key: []
      summary: List projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a project
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/io.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Create a project
      tags:
      - projects
  /projects/{project_id}:
    delete:
      consumes:
      - application/json
      description: Delete a projects
      parameters:
      - description: project_id
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Delete a projects
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a project
      parameters:
      - description: project_id
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Project'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Get a project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project
      parameters:
      - description: project_id
        in: path
        name: project_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/io.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/io.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Update a project
      tags:
      - projects
  /projects/{project_id}/sprints:
    get:
      consumes:
      - application/json
      description: List sprints
      parameters:
      - description: project_id
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Sprint'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: List sprints
      tags:
      - sprints
  /projects/{project_id}/sprints/{sprint_id}:
    patch:
      consumes:
      - application/json
      description: Update a sprint
      parameters:
      - description: project_id
        in: path
        name: project_id
        required: true
        type: integer
      - description: sprint_id
        in: path
        name: sprint_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/io.UpdateSprintRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Sprint'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      security:
      - Account API Key: []
      summary: Update a sprint
      tags:
      - sprints
  /sign_in:
    post:
      consumes:
      - application/json
      description: Sign in
      parameters:
      - description: sign in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/io.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      summary: Sign in
      tags:
      - auth
  /sign_up:
    post:
      consumes:
      - application/json
      description: Sign up
      parameters:
      - description: sign up request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/io.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      summary: Sign up
      tags:
      - auth
  /verify_email:
    get:
      consumes:
      - application/json
      description: Verify email
      parameters:
      - description: verification jwt token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/io.ErrorResponse'
      summary: Verify email
      tags:
      - auth
securityDefinitions:
  Account API Key:
    in: Header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
